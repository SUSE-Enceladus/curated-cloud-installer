en:
  product_brand:
    title: "SUSE Rancher Setup"
  greeting:
    content: "This tool is designed to automate the deployment of Rancher
      Manager in your AWS account. At the end of this process, you should
      have a highly-available instance of Rancher running on EKS. To get
      the most out of your Rancher experience, we recommend you familiarize
      yourself with the product documentation: [rancher docs](https://rancher.com/docs/)


      You shouldn't have to be an expert in container management to run Rancher.
      **SUSE Rancher Setup** tool will make the process as easy as we can make it…
      you’ll just need to provide a few things to deploy Rancher on a dedicated
      AWS EKS cluster, sized just right for your needs.


      ### What we need from you

      1. **AWS permissions** In order to perform the set up for you, this
      application needs to access AWS - this virtual machine must have an
      *associated IAM instance profile* with
      persmission to create and modify EKS clusters and nodegroups, VPCs,
      subnets, routes, Internet Gateways, NATs, elastic IP addresses, EC2
      instances and auto-scaling groups, and Route53 records in an existing
      hosted zone.
      [More Info](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html#launch-instance-with-role)
      | [Required permissions](https://raw.githubusercontent.com/SUSE-Enceladus/suse-rancher-setup/main/aws-iam/iam_role.json)

      2. **A Route53 Hosted Zone.** We need to give your Rancher server a
      domain name, and to do so, the subdomain we use needs to be configured
      as an AWS Route53 hosted zone. We'll take care of the DNS record for
      Rancher, and make sure it's all properly routed, you just need to give
      us a place to work. It can be a public zone or a private zone, as long as
      it is resolvable by this virtual machine and your PC, and the
      *AWS credentials* you provide have rights to edit the zone.
      [More Info](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/CreatingHostedZone.html)


      ### Let's go


      When you have that ready, click the big, orange **Next** button to get
      started, and go ahead and brew a cup of coffee or tea... *the full
      deployment will take about 20 minutes.*"
  engines:
    # override the shirt size settings, to be specific to Rancher on EKS
    shirt_size:
      sizes:
        form_caption: "We don't expect you to know *exactly* what you're going
        to manage with your Rancher server, but we also don't want you to waste
        resources on capacity you don't need. We just need a general idea of
        what your plans are, and we'll set things up accordingly. Think of it as
        finding the 'shirt size' for your deployment.


        The measurement we use is the number of kubernetes nodes that will be
        managed by your Rancher server."
        labels:
            small:  "SMALL - up to 35 nodes"
            medium: "MEDIUM - up to 75 nodes"
            large:  "LARGE - up to 125 nodes"

    rancher_on_eks:
      steps:
        title: "Deploy Rancher on AWS EKS"
        form_caption: "Okay, we have everything we need. It's time to deploy
          your Rancher server on a dedicated EKS cluster. When you're ready to
          start, just click **Execute**, and sit back. Your Rancher server will
          be ready in about 20 minutes, and we'll tell you how to access it.


          Along the way, we'll be sure to show you exactly what we're doing,
          so there are no surpises, and when we're done we'll also give you a
          list of all the AWS resources that were created to support your
          Rancher server."
      fqdn:
        title: "Rancher URL"
        form_caption: "What is the Fully Qualified Domain Name (*FQDN*) where
          Rancher will be served? This forms the URL you will enter into your
          web browser to access Rancher.


          The subdomain containing this *FQDN* _must be preconfigured as an
          AWS Route53 hosted zone_. For example, if the *FQDN* is
          `rancher.example.com`, then `example.com` must be a Route53 hosted
          zone, and Rancher will be served at `https://rancher.example.com` ."
        using: "Rancher will be served at 'https://%{fqdn}'."
      wrapup:
        title: "Congratulations - your Rancher server is ready!"
        failed_title: "Oh no ! Your Rancher deployment has failed!"
        caption: "**It's done! Your Rancher server, deployed on a dedicated
          EKS cluster, is ready and waiting to manage the rest of your container
          workloads.**"
        kubeconfig_info: "\nIn case you need to manage the Rancher cluster please generate your kubeconfig file using
        `aws eks update-kubeconfig --region %{region} --name %{cluster_name}`
        for more details see the [AWS documentation](https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html)"
        failed_caption: "**Deployment failed. Something went wrong during the deployment.**"
        failed_info: "The resources created should be cleaned up, if any. Retry another deployment once the issue has been resolved."
        url: "You can browse to your Rancher server at
          [%{fqdn}](https://%{fqdn})."
        password: "The initial password is: `%{password}`. You will be prompted
          to change it when you first log in."
        resources:
          subtitle: "AWS Resources"
          caption: "The following resources were created as part of your deployment:"
        resources_not_created: "No resources were created."
        commands:
          subtitle: "AWS Clean Resources Commands"
          caption: "The following commands clean up the resources created, please,
          apply in that order.
          Make sure to run those commands with your credentials available in the env, i.e.
          `AWS_ACCESS_KEY_ID=foo AWS_SECRET_ACCESS_KEY=bar aws ec2 command --options`
          or download the commands:"
        clean_resources_file: 'clean_resources_commands'
        clean_resources_commands: 'Clean resources commands'
        clean_resources: 'Clean resources'
        cleaning_resources: 'Cleaning resources'
        resources_cleaned: 'Resources cleaned'
        generate_clean_resources_commands: 'Generate clean resources commands'
        generating_clean_resources_commands: 'Generating clean resources commands'
      custom_configs:
        title: 'Install Rancher from a customized location'
        success: 'Rancher will be installed from the specified sources.'
