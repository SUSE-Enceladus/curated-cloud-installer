{"name":"rancher-stable","info":{"first_deployed":"2023-02-17T12:13:13.507784143-08:00","last_deployed":"2023-02-17T12:13:13.507784143-08:00","deleted":"","description":"Install complete","status":"deployed","notes":"Rancher Server has been installed.\n\nNOTE: Rancher may take several minutes to fully initialize. Please standby while Certificates are being issued, Containers are started and the Ingress rule comes up.\n\nCheck out our docs at https://rancher.com/docs/\n\nIf you provided your own bootstrap password during installation, browse to https://rancher-setup-test.azure.bear454.com to get started.\n\nIf this is the first time you installed Rancher, get started by running this command and clicking the URL it generates:\n\n```\necho https://rancher-setup-test.azure.bear454.com/dashboard/?setup=$(kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{.data.bootstrapPassword|base64decode}}')\n```\n\nTo get just the bootstrap password on its own, run:\n\n```\nkubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{.data.bootstrapPassword|base64decode}}{{ \"\\n\" }}'\n```\n\n\nHappy Containering!\n"},"config":{"extraEnv":[{"name":"CATTLE_PROMETHEUS_METRICS","value":"true"}],"hostname":"rancher-setup-test.azure.bear454.com","ingress":{"ingressClassName":"nginx","tls":{"source":"rancher"}},"letsEncrypt":{"ingress":{"class":"nginx"}},"replicas":3},"manifest":"---\n# Source: rancher/templates/serviceAccount.yaml\nkind: ServiceAccount\napiVersion: v1\nmetadata:\n  name: rancher-stable\n  labels:\n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\n---\n# Source: rancher/templates/clusterRoleBinding.yaml\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: rancher-stable\n  labels:\n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\nsubjects:\n- kind: ServiceAccount\n  name: rancher-stable\n  namespace: cattle-system\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\n---\n# Source: rancher/templates/service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: rancher-stable\n  labels:\n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n    protocol: TCP\n    name: http\n  - port: 443\n    targetPort: 444\n    protocol: TCP\n    name: https-internal\n  selector:\n    app: rancher-stable\n---\n# Source: rancher/templates/deployment.yaml\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: rancher-stable\n  annotations:\n  labels:\n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: rancher-stable\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app: rancher-stable\n        release: rancher-stable\n    spec:\n      serviceAccountName: rancher-stable\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: app\n                  operator: In\n                  values:\n                  - rancher-stable\n              topologyKey: kubernetes.io/hostname\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms: \n              - matchExpressions:\n                - key: kubernetes.io/os\n                  operator: NotIn\n                  values:\n                  - windows\n      tolerations: \n        - key: \"cattle.io/os\"\n          value: \"linux\"\n          effect: \"NoSchedule\"\n          operator: \"Equal\"\n      containers:\n      - image: rancher/rancher:v2.6.10\n        imagePullPolicy: IfNotPresent\n        name: rancher\n        ports:\n        - containerPort: 80\n          protocol: TCP\n        args:\n        # Rancher self-signed - don't clear ca certs\n        - \"--http-listen-port=80\"\n        - \"--https-listen-port=443\"\n        - \"--add-local=true\"\n        env:\n        - name: CATTLE_NAMESPACE\n          value: cattle-system\n        - name: CATTLE_PEER_SERVICE\n          value: rancher-stable\n        - name: CATTLE_PROMETHEUS_METRICS\n          value: \"true\"\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: 80\n          initialDelaySeconds: 60\n          periodSeconds: 30\n        readinessProbe:\n          httpGet:\n            path: /healthz\n            port: 80\n          initialDelaySeconds: 5\n          periodSeconds: 30\n        resources:\n          {}\n        volumeMounts:\n      volumes:\n---\n# Source: rancher/templates/ingress.yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: rancher-stable\n  labels:\n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\n  annotations:\n    cert-manager.io/issuer: rancher-stable\n    cert-manager.io/issuer-kind: Issuer\n    nginx.ingress.kubernetes.io/proxy-connect-timeout: \"30\"\n    nginx.ingress.kubernetes.io/proxy-read-timeout: \"1800\"\n    nginx.ingress.kubernetes.io/proxy-send-timeout: \"1800\"\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: rancher-setup-test.azure.bear454.com  # hostname to access rancher server\n    http:\n      paths:\n      - backend:\n          service:\n            name: rancher-stable\n            port:\n              number: 80\n        pathType: ImplementationSpecific\n  tls:\n  - hosts:\n    - rancher-setup-test.azure.bear454.com\n    secretName: tls-rancher-ingress\n---\n# Source: rancher/templates/issuer-rancher.yaml\napiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: rancher-stable\n  labels:\n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\nspec:\n  ca:\n    secretName: tls-rancher\n","hooks":[{"name":"rancher-stable-post-delete","kind":"PodSecurityPolicy","path":"rancher/templates/post-delete-hook-psp.yaml","manifest":"apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: rancher-stable-post-delete\n  labels: \n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\n  annotations:\n    \"helm.sh/hook\": post-delete\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded,hook-failed\nspec:\n  privileged: false\n  hostNetwork: false\n  hostIPC: false\n  hostPID: false\n  runAsUser:\n    rule: 'RunAsAny'\n  seLinux:\n    rule: 'RunAsAny'\n  supplementalGroups:\n    rule: 'MustRunAs'\n    ranges:\n      - min: 1\n        max: 65535\n  fsGroup:\n    rule: 'MustRunAs'\n    ranges:\n      - min: 1\n        max: 65535\n  readOnlyRootFilesystem: false\n  volumes:\n    - 'secret'\n    - 'configMap'","events":["post-delete"],"last_run":{"started_at":"","completed_at":"","phase":""},"weight":1,"delete_policies":["before-hook-creation","hook-succeeded","hook-failed"]},{"name":"rancher-stable-post-delete","kind":"ServiceAccount","path":"rancher/templates/post-delete-hook-service-account.yaml","manifest":"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: rancher-stable-post-delete\n  namespace: cattle-system\n  labels: \n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\n  annotations:\n    \"helm.sh/hook\": post-delete\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded,hook-failed","events":["post-delete"],"last_run":{"started_at":"","completed_at":"","phase":""},"weight":1,"delete_policies":["before-hook-creation","hook-succeeded","hook-failed"]},{"name":"rancher-stable-post-delete","kind":"ConfigMap","path":"rancher/templates/post-delete-hook-config-map.yaml","manifest":"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: rancher-stable-post-delete\n  namespace: cattle-system\n  labels: \n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\n  annotations:\n    \"helm.sh/hook\": post-delete\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded,hook-failed\ndata:\n  post-delete-hook.sh: |-\n    #!/bin/bash\n    \n    set -e\n    \n    namespaces=\"${NAMESPACES}\"\n    rancher_namespace=\"${RANCHER_NAMESPACE}\"\n    timeout=\"${TIMEOUT}\"\n    ignoreTimeoutError=\"${IGNORETIMEOUTERROR}\"\n    \n    if [[ -z ${namespaces} ]]; then\n      echo \"No namespace is provided.\"\n      exit 1\n    fi\n    \n    if [[ -z ${rancher_namespace} ]]; then\n      echo \"No rancher namespace is provided.\"\n      exit 1\n    fi\n    \n    if [[ -z ${timeout} ]]; then\n      echo \"No timeout value is provided.\"\n      exit 1\n    fi\n    \n    if [[ -z ${ignoreTimeoutError} ]]; then\n      echo \"No ignoreTimeoutError value is provided.\"\n      exit 1\n    fi\n    \n    succeeded=()\n    failed=()\n    \n    get_pod_count() {\n      kubectl get pods --selector app=\"${1}\" -n \"${2}\" -o json | jq '.items | length'\n    }\n    \n    echo \"Uninstalling Rancher resources in the following namespaces: ${namespaces}\"\n    \n    for namespace in ${namespaces}; do\n      for app in $(helm list -n \"${namespace}\" -q); do\n        if [[ ${app} =~ .crd$ ]]; then\n          echo \"--- Skip the app [${app}] in the namespace [${namespace}]\"\n          continue\n        fi\n        echo \"--- Deleting the app [${app}] in the namespace [${namespace}]\"\n        if [[ ! $(helm uninstall \"${app}\" -n \"${namespace}\") ]]; then\n          failed=(\"${failed[@]}\" \"${app}\")\n          continue\n        fi\n    \n        t=0\n        while true; do\n          if [[ $(get_pod_count \"${app}\" \"${namespace}\") -eq 0 ]]; then\n            echo \"successfully uninstalled [${app}] in the namespace [${namespace}]\"\n            succeeded=(\"${succeeded[@]}\" \"${app}\")\n            break\n          fi\n          if [[ ${t} -ge ${timeout} ]]; then\n            echo \"timeout uninstalling [${app}] in the namespace [${namespace}]\"\n            failed=(\"${failed[@]}\" \"${app}\")\n            break\n          fi\n          # by default, wait 120 seconds in total for an app to be uninstalled\n          echo \"waiting 5 seconds for pods of [${app}] to be terminated ...\"\n          sleep 5\n          t=$((t + 5))\n        done\n      done\n    \n      # delete the helm operator pods\n      for pod in $(kubectl get pods -n \"${namespace}\" -o name); do\n        if [[ ${pod} =~ ^pod\\/helm-operation-* ]]; then\n          echo \"--- Deleting the pod [${pod}] in the namespace [${namespace}]\"\n          kubectl delete \"${pod}\" -n \"${namespace}\"\n        fi\n      done\n    done\n    \n    echo \"Removing Rancher bootstrap secret in the following namespace: ${rancher_namespace}\"\n    kubectl --ignore-not-found=true delete secret bootstrap-secret -n \"${rancher_namespace}\"\n    \n    echo \"------ Summary ------\"\n    if [[ ${#succeeded[@]} -ne 0 ]]; then\n      echo \"Succeeded to uninstall the following apps:\" \"${succeeded[@]}\"\n    fi\n    \n    if [[ ${#failed[@]} -ne 0 ]]; then\n      echo \"Failed to uninstall the following apps:\" \"${failed[@]}\"\n      if [[ \"${ignoreTimeoutError}\" == \"false\" ]]; then\n        exit 2\n      fi\n    else\n      echo \"Cleanup finished successfully.\"\n    fi","events":["post-delete"],"last_run":{"started_at":"","completed_at":"","phase":""},"weight":1,"delete_policies":["before-hook-creation","hook-succeeded","hook-failed"]},{"name":"rancher-stable-post-delete","kind":"ClusterRole","path":"rancher/templates/post-delete-hook-cluster-role.yaml","manifest":"kind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: rancher-stable-post-delete\n  labels: \n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\n  annotations:\n    \"helm.sh/hook\": post-delete\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded,hook-failed\nrules:\n  - apiGroups: [ \"extensions\",\"apps\" ]\n    resources: [ \"deployments\" ]\n    verbs: [ \"get\", \"list\", \"delete\" ]\n  - apiGroups: [ \"batch\" ]\n    resources: [ \"jobs\" ]\n    verbs: [ \"get\", \"list\", \"watch\", \"delete\", \"create\" ]\n  - apiGroups: [ \"rbac.authorization.k8s.io\" ]\n    resources: [ \"clusterroles\", \"clusterrolebindings\", \"roles\", \"rolebindings\" ]\n    verbs: [ \"get\", \"list\", \"delete\", \"create\" ]\n  - apiGroups: [ \"\" ]\n    resources: [ \"pods\", \"secrets\", \"services\", \"configmaps\" ]\n    verbs: [ \"get\", \"list\", \"delete\" ]\n  - apiGroups: [ \"\" ]\n    resources: [ \"serviceaccounts\" ]\n    verbs: [ \"get\", \"list\", \"delete\", \"create\" ]\n  - apiGroups: [ \"networking.k8s.io\" ]\n    resources: [ \"networkpolicies\" ]\n    verbs: [ \"get\", \"list\", \"delete\" ]\n  - apiGroups: [ \"admissionregistration.k8s.io\" ]\n    resources: [ \"validatingwebhookconfigurations\", \"mutatingwebhookconfigurations\" ]\n    verbs: [ \"get\", \"list\", \"delete\" ]\n  - apiGroups: [ \"policy\" ]\n    resources: [ \"podsecuritypolicies\" ]\n    verbs: [ \"use\", \"delete\", \"create\" ]\n  - apiGroups: [ \"networking.k8s.io\" ]\n    resources: [ \"ingresses\" ]\n    verbs: [ \"delete\" ]\n  - apiGroups: [ \"cert-manager.io\" ]\n    resources: [ \"issuers\" ]\n    verbs: [ \"delete\" ]","events":["post-delete"],"last_run":{"started_at":"","completed_at":"","phase":""},"weight":1,"delete_policies":["before-hook-creation","hook-succeeded","hook-failed"]},{"name":"rancher-stable-post-delete","kind":"ClusterRoleBinding","path":"rancher/templates/post-delete-hook-cluster-role-binding.yaml","manifest":"apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: rancher-stable-post-delete\n  labels: \n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\n  annotations:\n    \"helm.sh/hook\": post-delete\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded,hook-failed\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: rancher-stable-post-delete\nsubjects:\n  - kind: ServiceAccount\n    name: rancher-stable-post-delete\n    namespace: cattle-system","events":["post-delete"],"last_run":{"started_at":"","completed_at":"","phase":""},"weight":2,"delete_policies":["before-hook-creation","hook-succeeded","hook-failed"]},{"name":"rancher-stable-post-delete","kind":"Job","path":"rancher/templates/post-delete-hook-job.yaml","manifest":"apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: rancher-stable-post-delete\n  namespace: cattle-system\n  labels: \n    app: rancher-stable\n    chart: rancher-2.6.10\n    heritage: Helm\n    release: rancher-stable\n  annotations:\n    \"helm.sh/hook\": post-delete\n    \"helm.sh/hook-weight\": \"3\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded\nspec:\n  backoffLimit: 3\n  template:\n    metadata:\n      name: rancher-stable-post-delete\n      labels: \n        app: rancher-stable\n        chart: rancher-2.6.10\n        heritage: Helm\n        release: rancher-stable\n    spec:\n      serviceAccountName: rancher-stable-post-delete\n      restartPolicy: OnFailure\n      containers:\n        - name: rancher-post-delete\n          image: \"rancher/shell:v0.1.18\"\n          imagePullPolicy: IfNotPresent\n          securityContext:\n            runAsUser: 0\n          command:\n            - /scripts/post-delete-hook.sh\n          volumeMounts:\n            - mountPath: /scripts\n              name: config-volume\n          env:\n            - name: NAMESPACES\n              value: \"cattle-fleet-system cattle-system rancher-operator-system\"\n            - name: RANCHER_NAMESPACE\n              value: cattle-system\n            - name: TIMEOUT\n              value: \"120\"\n            - name: IGNORETIMEOUTERROR\n              value: \"false\"\n      volumes:\n        - name: config-volume\n          configMap:\n            name: rancher-stable-post-delete\n            defaultMode: 0777","events":["post-delete"],"last_run":{"started_at":"","completed_at":"","phase":""},"weight":3,"delete_policies":["before-hook-creation","hook-succeeded"]}],"version":1,"namespace":"cattle-system"}
