---
- |
  {
      "apiVersion": "v1",
      "items": [
          {
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "metadata": {
                  "annotations": {
                      "deployment.kubernetes.io/revision": "1",
                      "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\",\"version\":\"v20\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\",\"version\":\"v20\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\"},\"labels\":{\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v20\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/coredns:v1.9.3\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8181,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"cpu\":3,\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"procMount\":\"Default\",\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/etc/coredns/custom\",\"name\":\"custom-config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"},{\"configMap\":{\"name\":\"coredns-custom\",\"optional\":true},\"name\":\"custom-config-volume\"},{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n"
                  },
                  "creationTimestamp": "2023-04-14T19:31:03Z",
                  "generation": 2,
                  "labels": {
                      "addonmanager.kubernetes.io/mode": "Reconcile",
                      "k8s-app": "kube-dns",
                      "kubernetes.io/cluster-service": "true",
                      "kubernetes.io/name": "CoreDNS",
                      "version": "v20"
                  },
                  "name": "coredns",
                  "namespace": "kube-system",
                  "resourceVersion": "1311",
                  "uid": "cfa9e40a-5317-45ef-94e7-00a5222e3c59"
              },
              "spec": {
                  "progressDeadlineSeconds": 600,
                  "replicas": 2,
                  "revisionHistoryLimit": 2,
                  "selector": {
                      "matchLabels": {
                          "k8s-app": "kube-dns",
                          "version": "v20"
                      }
                  },
                  "strategy": {
                      "rollingUpdate": {
                          "maxSurge": "25%",
                          "maxUnavailable": 1
                      },
                      "type": "RollingUpdate"
                  },
                  "template": {
                      "metadata": {
                          "annotations": {
                              "prometheus.io/port": "9153"
                          },
                          "creationTimestamp": null,
                          "labels": {
                              "k8s-app": "kube-dns",
                              "kubernetes.io/cluster-service": "true",
                              "version": "v20"
                          }
                      },
                      "spec": {
                          "affinity": {
                              "nodeAffinity": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                      {
                                          "preference": {
                                              "matchExpressions": [
                                                  {
                                                      "key": "kubernetes.azure.com/mode",
                                                      "operator": "In",
                                                      "values": [
                                                          "system"
                                                      ]
                                                  }
                                              ]
                                          },
                                          "weight": 100
                                      }
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                      "nodeSelectorTerms": [
                                          {
                                              "matchExpressions": [
                                                  {
                                                      "key": "kubernetes.azure.com/cluster",
                                                      "operator": "Exists"
                                                  },
                                                  {
                                                      "key": "type",
                                                      "operator": "NotIn",
                                                      "values": [
                                                          "virtual-kubelet"
                                                      ]
                                                  },
                                                  {
                                                      "key": "kubernetes.io/os",
                                                      "operator": "In",
                                                      "values": [
                                                          "linux"
                                                      ]
                                                  }
                                              ]
                                          }
                                      ]
                                  }
                              },
                              "podAntiAffinity": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                      {
                                          "podAffinityTerm": {
                                              "labelSelector": {
                                                  "matchExpressions": [
                                                      {
                                                          "key": "k8s-app",
                                                          "operator": "In",
                                                          "values": [
                                                              "kube-dns"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "topologyKey": "topology.kubernetes.io/zone"
                                          },
                                          "weight": 10
                                      },
                                      {
                                          "podAffinityTerm": {
                                              "labelSelector": {
                                                  "matchExpressions": [
                                                      {
                                                          "key": "k8s-app",
                                                          "operator": "In",
                                                          "values": [
                                                              "kube-dns"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "topologyKey": "kubernetes.io/hostname"
                                          },
                                          "weight": 5
                                      }
                                  ]
                              }
                          },
                          "containers": [
                              {
                                  "args": [
                                      "-conf",
                                      "/etc/coredns/Corefile"
                                  ],
                                  "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.3",
                                  "imagePullPolicy": "IfNotPresent",
                                  "livenessProbe": {
                                      "failureThreshold": 5,
                                      "httpGet": {
                                          "path": "/health",
                                          "port": 8080,
                                          "scheme": "HTTP"
                                      },
                                      "initialDelaySeconds": 60,
                                      "periodSeconds": 10,
                                      "successThreshold": 1,
                                      "timeoutSeconds": 5
                                  },
                                  "name": "coredns",
                                  "ports": [
                                      {
                                          "containerPort": 53,
                                          "name": "dns",
                                          "protocol": "UDP"
                                      },
                                      {
                                          "containerPort": 53,
                                          "name": "dns-tcp",
                                          "protocol": "TCP"
                                      },
                                      {
                                          "containerPort": 9153,
                                          "name": "metrics",
                                          "protocol": "TCP"
                                      }
                                  ],
                                  "readinessProbe": {
                                      "failureThreshold": 3,
                                      "httpGet": {
                                          "path": "/ready",
                                          "port": 8181,
                                          "scheme": "HTTP"
                                      },
                                      "periodSeconds": 10,
                                      "successThreshold": 1,
                                      "timeoutSeconds": 1
                                  },
                                  "resources": {
                                      "limits": {
                                          "cpu": "3",
                                          "memory": "500Mi"
                                      },
                                      "requests": {
                                          "cpu": "100m",
                                          "memory": "70Mi"
                                      }
                                  },
                                  "securityContext": {
                                      "allowPrivilegeEscalation": false,
                                      "capabilities": {
                                          "add": [
                                              "NET_BIND_SERVICE"
                                          ],
                                          "drop": [
                                              "all"
                                          ]
                                      },
                                      "procMount": "Default",
                                      "readOnlyRootFilesystem": true
                                  },
                                  "terminationMessagePath": "/dev/termination-log",
                                  "terminationMessagePolicy": "File",
                                  "volumeMounts": [
                                      {
                                          "mountPath": "/etc/coredns",
                                          "name": "config-volume",
                                          "readOnly": true
                                      },
                                      {
                                          "mountPath": "/etc/coredns/custom",
                                          "name": "custom-config-volume",
                                          "readOnly": true
                                      },
                                      {
                                          "mountPath": "/tmp",
                                          "name": "tmp"
                                      }
                                  ]
                              }
                          ],
                          "dnsPolicy": "Default",
                          "priorityClassName": "system-node-critical",
                          "restartPolicy": "Always",
                          "schedulerName": "default-scheduler",
                          "securityContext": {},
                          "serviceAccount": "coredns",
                          "serviceAccountName": "coredns",
                          "terminationGracePeriodSeconds": 30,
                          "tolerations": [
                              {
                                  "effect": "NoSchedule",
                                  "key": "node-role.kubernetes.io/master"
                              },
                              {
                                  "key": "CriticalAddonsOnly",
                                  "operator": "Exists"
                              },
                              {
                                  "effect": "NoExecute",
                                  "key": "node.kubernetes.io/unreachable",
                                  "operator": "Exists",
                                  "tolerationSeconds": 30
                              },
                              {
                                  "effect": "NoExecute",
                                  "key": "node.kubernetes.io/not-ready",
                                  "operator": "Exists",
                                  "tolerationSeconds": 30
                              }
                          ],
                          "volumes": [
                              {
                                  "configMap": {
                                      "defaultMode": 420,
                                      "items": [
                                          {
                                              "key": "Corefile",
                                              "path": "Corefile"
                                          }
                                      ],
                                      "name": "coredns"
                                  },
                                  "name": "config-volume"
                              },
                              {
                                  "configMap": {
                                      "defaultMode": 420,
                                      "name": "coredns-custom",
                                      "optional": true
                                  },
                                  "name": "custom-config-volume"
                              },
                              {
                                  "emptyDir": {},
                                  "name": "tmp"
                              }
                          ]
                      }
                  }
              },
              "status": {
                  "availableReplicas": 2,
                  "conditions": [
                      {
                          "lastTransitionTime": "2023-04-14T19:31:03Z",
                          "lastUpdateTime": "2023-04-14T19:31:03Z",
                          "message": "Deployment has minimum availability.",
                          "reason": "MinimumReplicasAvailable",
                          "status": "True",
                          "type": "Available"
                      },
                      {
                          "lastTransitionTime": "2023-04-14T19:31:03Z",
                          "lastUpdateTime": "2023-04-14T19:32:21Z",
                          "message": "ReplicaSet \"coredns-59b6bf8b4f\" has successfully progressed.",
                          "reason": "NewReplicaSetAvailable",
                          "status": "True",
                          "type": "Progressing"
                      }
                  ],
                  "observedGeneration": 2,
                  "readyReplicas": 2,
                  "replicas": 2,
                  "updatedReplicas": 2
              }
          },
          {
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "metadata": {
                  "annotations": {
                      "deployment.kubernetes.io/revision": "1",
                      "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"coredns-autoscaler\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"coredns-autoscaler\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"coredns-autoscaler\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\",\"seccomp.security.alpha.kubernetes.io/pod\":\"runtime/default\"},\"labels\":{\"k8s-app\":\"coredns-autoscaler\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"command\":[\"/cluster-proportional-autoscaler\",\"--namespace=kube-system\",\"--configmap=coredns-autoscaler\",\"--target=deployment/coredns\",\"--default-params={\\\"ladder\\\":{\\\"coresToReplicas\\\":[[1,2],[512,3],[1024,4],[2048,5]],\\\"nodesToReplicas\\\":[[1,2],[8,3],[16,4],[32,5]]}}\",\"--logtostderr=true\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:1.8.5.2\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/last-poll\",\"port\":8080},\"initialDelaySeconds\":10,\"periodSeconds\":10},\"name\":\"autoscaler\",\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"20m\",\"memory\":\"10Mi\"}}}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"coredns-autoscaler\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}]}}}}\n"
                  },
                  "creationTimestamp": "2023-04-14T19:31:03Z",
                  "generation": 1,
                  "labels": {
                      "addonmanager.kubernetes.io/mode": "Reconcile",
                      "k8s-app": "coredns-autoscaler",
                      "kubernetes.io/cluster-service": "true"
                  },
                  "name": "coredns-autoscaler",
                  "namespace": "kube-system",
                  "resourceVersion": "1167",
                  "uid": "505f0794-e0a7-4dca-9150-c3efdc1eefc4"
              },
              "spec": {
                  "progressDeadlineSeconds": 600,
                  "replicas": 1,
                  "revisionHistoryLimit": 2,
                  "selector": {
                      "matchLabels": {
                          "k8s-app": "coredns-autoscaler"
                      }
                  },
                  "strategy": {
                      "rollingUpdate": {
                          "maxSurge": "25%",
                          "maxUnavailable": "25%"
                      },
                      "type": "RollingUpdate"
                  },
                  "template": {
                      "metadata": {
                          "annotations": {
                              "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                              "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                          },
                          "creationTimestamp": null,
                          "labels": {
                              "k8s-app": "coredns-autoscaler"
                          }
                      },
                      "spec": {
                          "affinity": {
                              "nodeAffinity": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                      {
                                          "preference": {
                                              "matchExpressions": [
                                                  {
                                                      "key": "kubernetes.azure.com/mode",
                                                      "operator": "In",
                                                      "values": [
                                                          "system"
                                                      ]
                                                  }
                                              ]
                                          },
                                          "weight": 100
                                      }
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                      "nodeSelectorTerms": [
                                          {
                                              "matchExpressions": [
                                                  {
                                                      "key": "kubernetes.azure.com/cluster",
                                                      "operator": "Exists"
                                                  },
                                                  {
                                                      "key": "type",
                                                      "operator": "NotIn",
                                                      "values": [
                                                          "virtual-kubelet"
                                                      ]
                                                  },
                                                  {
                                                      "key": "kubernetes.io/os",
                                                      "operator": "In",
                                                      "values": [
                                                          "linux"
                                                      ]
                                                  }
                                              ]
                                          }
                                      ]
                                  }
                              }
                          },
                          "containers": [
                              {
                                  "command": [
                                      "/cluster-proportional-autoscaler",
                                      "--namespace=kube-system",
                                      "--configmap=coredns-autoscaler",
                                      "--target=deployment/coredns",
                                      "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                      "--logtostderr=true",
                                      "--v=2"
                                  ],
                                  "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:1.8.5.2",
                                  "imagePullPolicy": "IfNotPresent",
                                  "livenessProbe": {
                                      "failureThreshold": 3,
                                      "httpGet": {
                                          "path": "/last-poll",
                                          "port": 8080,
                                          "scheme": "HTTP"
                                      },
                                      "initialDelaySeconds": 10,
                                      "periodSeconds": 10,
                                      "successThreshold": 1,
                                      "timeoutSeconds": 1
                                  },
                                  "name": "autoscaler",
                                  "resources": {
                                      "limits": {
                                          "cpu": "200m",
                                          "memory": "500Mi"
                                      },
                                      "requests": {
                                          "cpu": "20m",
                                          "memory": "10Mi"
                                      }
                                  },
                                  "terminationMessagePath": "/dev/termination-log",
                                  "terminationMessagePolicy": "File"
                              }
                          ],
                          "dnsPolicy": "Default",
                          "priorityClassName": "system-node-critical",
                          "restartPolicy": "Always",
                          "schedulerName": "default-scheduler",
                          "securityContext": {},
                          "serviceAccount": "coredns-autoscaler",
                          "serviceAccountName": "coredns-autoscaler",
                          "terminationGracePeriodSeconds": 30,
                          "tolerations": [
                              {
                                  "key": "CriticalAddonsOnly",
                                  "operator": "Exists"
                              },
                              {
                                  "effect": "NoExecute",
                                  "key": "node.kubernetes.io/unreachable",
                                  "operator": "Exists",
                                  "tolerationSeconds": 30
                              },
                              {
                                  "effect": "NoExecute",
                                  "key": "node.kubernetes.io/not-ready",
                                  "operator": "Exists",
                                  "tolerationSeconds": 30
                              }
                          ]
                      }
                  }
              },
              "status": {
                  "availableReplicas": 1,
                  "conditions": [
                      {
                          "lastTransitionTime": "2023-04-14T19:32:20Z",
                          "lastUpdateTime": "2023-04-14T19:32:20Z",
                          "message": "Deployment has minimum availability.",
                          "reason": "MinimumReplicasAvailable",
                          "status": "True",
                          "type": "Available"
                      },
                      {
                          "lastTransitionTime": "2023-04-14T19:31:03Z",
                          "lastUpdateTime": "2023-04-14T19:32:20Z",
                          "message": "ReplicaSet \"coredns-autoscaler-68cd8fbf4d\" has successfully progressed.",
                          "reason": "NewReplicaSetAvailable",
                          "status": "True",
                          "type": "Progressing"
                      }
                  ],
                  "observedGeneration": 1,
                  "readyReplicas": 1,
                  "replicas": 1,
                  "updatedReplicas": 1
              }
          },
          {
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "metadata": {
                  "annotations": {
                      "deployment.kubernetes.io/revision": "1",
                      "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"konnectivity-agent\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"konnectivity-agent\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":2,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"app\":\"konnectivity-agent\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":0,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"checksum/client-cert\":\"02207cec15e72125ab962d3c8fce46a57b5f9688bfb13145650660260b7eabf1\"},\"labels\":{\"app\":\"konnectivity-agent\",\"component\":\"tunnel\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"konnectivity-agent\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"konnectivity-agent\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"--proxy-server-host=suse-ranch-suse-rancher-set-5f40ee-3lxzablj.hcp.westus3.azmk8s.io\",\"--proxy-server-port=443\",\"--health-server-port=8082\",\"--keepalive-time=30s\",\"--agent-key=/certs/client.key\",\"--agent-cert=/certs/client.crt\",\"--ca-cert=/certs/ca.crt\",\"--alpn-proto=konnectivity\",\"-v=2\"],\"command\":[\"/proxy-agent\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":60,\"timeoutSeconds\":60},\"name\":\"konnectivity-agent\",\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"20m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/certs\",\"name\":\"certs\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"konnectivity-agent\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"name\":\"certs\",\"secret\":{\"secretName\":\"konnectivity-certs\"}}]}}}}\n"
                  },
                  "creationTimestamp": "2023-04-14T19:31:03Z",
                  "generation": 1,
                  "labels": {
                      "addonmanager.kubernetes.io/mode": "Reconcile",
                      "app": "konnectivity-agent",
                      "kubernetes.io/cluster-service": "true"
                  },
                  "name": "konnectivity-agent",
                  "namespace": "kube-system",
                  "resourceVersion": "1155",
                  "uid": "7e06657e-ae34-4a2c-8d9f-eccc29d5cbc9"
              },
              "spec": {
                  "progressDeadlineSeconds": 600,
                  "replicas": 2,
                  "revisionHistoryLimit": 2,
                  "selector": {
                      "matchLabels": {
                          "app": "konnectivity-agent"
                      }
                  },
                  "strategy": {
                      "rollingUpdate": {
                          "maxSurge": 0,
                          "maxUnavailable": 1
                      },
                      "type": "RollingUpdate"
                  },
                  "template": {
                      "metadata": {
                          "annotations": {
                              "checksum/client-cert": "02207cec15e72125ab962d3c8fce46a57b5f9688bfb13145650660260b7eabf1"
                          },
                          "creationTimestamp": null,
                          "labels": {
                              "app": "konnectivity-agent",
                              "component": "tunnel"
                          }
                      },
                      "spec": {
                          "affinity": {
                              "nodeAffinity": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                      {
                                          "preference": {
                                              "matchExpressions": [
                                                  {
                                                      "key": "kubernetes.azure.com/mode",
                                                      "operator": "In",
                                                      "values": [
                                                          "system"
                                                      ]
                                                  }
                                              ]
                                          },
                                          "weight": 100
                                      }
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                      "nodeSelectorTerms": [
                                          {
                                              "matchExpressions": [
                                                  {
                                                      "key": "kubernetes.azure.com/cluster",
                                                      "operator": "Exists"
                                                  },
                                                  {
                                                      "key": "type",
                                                      "operator": "NotIn",
                                                      "values": [
                                                          "virtual-kubelet"
                                                      ]
                                                  },
                                                  {
                                                      "key": "kubernetes.io/os",
                                                      "operator": "In",
                                                      "values": [
                                                          "linux"
                                                      ]
                                                  }
                                              ]
                                          }
                                      ]
                                  }
                              },
                              "podAntiAffinity": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                      {
                                          "podAffinityTerm": {
                                              "labelSelector": {
                                                  "matchExpressions": [
                                                      {
                                                          "key": "app",
                                                          "operator": "In",
                                                          "values": [
                                                              "konnectivity-agent"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "topologyKey": "topology.kubernetes.io/zone"
                                          },
                                          "weight": 10
                                      },
                                      {
                                          "podAffinityTerm": {
                                              "labelSelector": {
                                                  "matchExpressions": [
                                                      {
                                                          "key": "app",
                                                          "operator": "In",
                                                          "values": [
                                                              "konnectivity-agent"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "topologyKey": "kubernetes.io/hostname"
                                          },
                                          "weight": 5
                                      }
                                  ]
                              }
                          },
                          "automountServiceAccountToken": false,
                          "containers": [
                              {
                                  "args": [
                                      "--proxy-server-host=suse-ranch-suse-rancher-set-5f40ee-3lxzablj.hcp.westus3.azmk8s.io",
                                      "--proxy-server-port=443",
                                      "--health-server-port=8082",
                                      "--keepalive-time=30s",
                                      "--agent-key=/certs/client.key",
                                      "--agent-cert=/certs/client.crt",
                                      "--ca-cert=/certs/ca.crt",
                                      "--alpn-proto=konnectivity",
                                      "-v=2"
                                  ],
                                  "command": [
                                      "/proxy-agent"
                                  ],
                                  "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.0.33-hotfix.20221110",
                                  "imagePullPolicy": "IfNotPresent",
                                  "livenessProbe": {
                                      "failureThreshold": 3,
                                      "httpGet": {
                                          "path": "/ready",
                                          "port": 8082,
                                          "scheme": "HTTP"
                                      },
                                      "initialDelaySeconds": 30,
                                      "periodSeconds": 60,
                                      "successThreshold": 1,
                                      "timeoutSeconds": 60
                                  },
                                  "name": "konnectivity-agent",
                                  "readinessProbe": {
                                      "failureThreshold": 3,
                                      "httpGet": {
                                          "path": "/ready",
                                          "port": 8082,
                                          "scheme": "HTTP"
                                      },
                                      "periodSeconds": 10,
                                      "successThreshold": 1,
                                      "timeoutSeconds": 1
                                  },
                                  "resources": {
                                      "limits": {
                                          "cpu": "1",
                                          "memory": "1Gi"
                                      },
                                      "requests": {
                                          "cpu": "20m",
                                          "memory": "20Mi"
                                      }
                                  },
                                  "terminationMessagePath": "/dev/termination-log",
                                  "terminationMessagePolicy": "File",
                                  "volumeMounts": [
                                      {
                                          "mountPath": "/certs",
                                          "name": "certs"
                                      }
                                  ]
                              }
                          ],
                          "dnsPolicy": "Default",
                          "priorityClassName": "system-node-critical",
                          "restartPolicy": "Always",
                          "schedulerName": "default-scheduler",
                          "securityContext": {},
                          "serviceAccount": "konnectivity-agent",
                          "serviceAccountName": "konnectivity-agent",
                          "terminationGracePeriodSeconds": 30,
                          "tolerations": [
                              {
                                  "key": "CriticalAddonsOnly",
                                  "operator": "Exists"
                              },
                              {
                                  "effect": "NoExecute",
                                  "key": "node.kubernetes.io/unreachable",
                                  "operator": "Exists",
                                  "tolerationSeconds": 30
                              },
                              {
                                  "effect": "NoExecute",
                                  "key": "node.kubernetes.io/not-ready",
                                  "operator": "Exists",
                                  "tolerationSeconds": 30
                              }
                          ],
                          "volumes": [
                              {
                                  "name": "certs",
                                  "secret": {
                                      "defaultMode": 420,
                                      "secretName": "konnectivity-certs"
                                  }
                              }
                          ]
                      }
                  }
              },
              "status": {
                  "availableReplicas": 2,
                  "conditions": [
                      {
                          "lastTransitionTime": "2023-04-14T19:32:18Z",
                          "lastUpdateTime": "2023-04-14T19:32:18Z",
                          "message": "Deployment has minimum availability.",
                          "reason": "MinimumReplicasAvailable",
                          "status": "True",
                          "type": "Available"
                      },
                      {
                          "lastTransitionTime": "2023-04-14T19:31:03Z",
                          "lastUpdateTime": "2023-04-14T19:32:19Z",
                          "message": "ReplicaSet \"konnectivity-agent-57dcc7c5d6\" has successfully progressed.",
                          "reason": "NewReplicaSetAvailable",
                          "status": "True",
                          "type": "Progressing"
                      }
                  ],
                  "observedGeneration": 1,
                  "readyReplicas": 2,
                  "replicas": 2,
                  "updatedReplicas": 2
              }
          },
          {
              "apiVersion": "apps/v1",
              "kind": "Deployment",
              "metadata": {
                  "annotations": {
                      "deployment.kubernetes.io/revision": "2",
                      "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":2,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\"},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"metrics-server\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"metrics-server\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"command\":[\"/pod_nanny\",\"--config-dir=/etc/config\",\"--cpu=44m\",\"--extra-cpu=0.5m\",\"--memory=51Mi\",\"--extra-memory=4Mi\",\"--poll-period=180000\",\"--threshold=5\",\"--deployment=metrics-server\",\"--container=metrics-server\"],\"env\":[{\"name\":\"MY_POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"MY_POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.14\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"metrics-server-vpa\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"300Mi\"},\"requests\":{\"cpu\":\"5m\",\"memory\":\"30Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"metrics-server-config-volume\"}]},{\"command\":[\"/metrics-server\",\"--kubelet-insecure-tls\",\"--kubelet-preferred-address-types=InternalIP\",\"--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",\"--cert-dir=/tmp\",\"--secure-port=4443\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":\"ms-https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":20,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":4443,\"name\":\"ms-https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":\"ms-https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-dir\"}]}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"metrics-server\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-dir\"},{\"configMap\":{\"name\":\"metrics-server-config\",\"optional\":true},\"name\":\"metrics-server-config-volume\"}]}}}}\n"
                  },
                  "creationTimestamp": "2023-04-14T19:31:04Z",
                  "generation": 2,
                  "labels": {
                      "addonmanager.kubernetes.io/mode": "Reconcile",
                      "k8s-app": "metrics-server",
                      "kubernetes.io/cluster-service": "true"
                  },
                  "name": "metrics-server",
                  "namespace": "kube-system",
                  "resourceVersion": "1577",
                  "uid": "7cfa0fbc-cfe9-49a2-8aa1-3beb6f9e3c38"
              },
              "spec": {
                  "progressDeadlineSeconds": 600,
                  "replicas": 2,
                  "revisionHistoryLimit": 2,
                  "selector": {
                      "matchLabels": {
                          "k8s-app": "metrics-server"
                      }
                  },
                  "strategy": {
                      "rollingUpdate": {
                          "maxSurge": 1,
                          "maxUnavailable": 1
                      },
                      "type": "RollingUpdate"
                  },
                  "template": {
                      "metadata": {
                          "creationTimestamp": null,
                          "labels": {
                              "k8s-app": "metrics-server"
                          },
                          "name": "metrics-server"
                      },
                      "spec": {
                          "affinity": {
                              "nodeAffinity": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                      {
                                          "preference": {
                                              "matchExpressions": [
                                                  {
                                                      "key": "kubernetes.azure.com/mode",
                                                      "operator": "In",
                                                      "values": [
                                                          "system"
                                                      ]
                                                  }
                                              ]
                                          },
                                          "weight": 100
                                      }
                                  ],
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                      "nodeSelectorTerms": [
                                          {
                                              "matchExpressions": [
                                                  {
                                                      "key": "kubernetes.azure.com/cluster",
                                                      "operator": "Exists"
                                                  },
                                                  {
                                                      "key": "type",
                                                      "operator": "NotIn",
                                                      "values": [
                                                          "virtual-kubelet"
                                                      ]
                                                  },
                                                  {
                                                      "key": "kubernetes.io/os",
                                                      "operator": "In",
                                                      "values": [
                                                          "linux"
                                                      ]
                                                  }
                                              ]
                                          }
                                      ]
                                  }
                              },
                              "podAntiAffinity": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": [
                                      {
                                          "podAffinityTerm": {
                                              "labelSelector": {
                                                  "matchExpressions": [
                                                      {
                                                          "key": "k8s-app",
                                                          "operator": "In",
                                                          "values": [
                                                              "metrics-server"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "topologyKey": "topology.kubernetes.io/zone"
                                          },
                                          "weight": 10
                                      },
                                      {
                                          "podAffinityTerm": {
                                              "labelSelector": {
                                                  "matchExpressions": [
                                                      {
                                                          "key": "k8s-app",
                                                          "operator": "In",
                                                          "values": [
                                                              "metrics-server"
                                                          ]
                                                      }
                                                  ]
                                              },
                                              "topologyKey": "kubernetes.io/hostname"
                                          },
                                          "weight": 5
                                      }
                                  ]
                              }
                          },
                          "containers": [
                              {
                                  "command": [
                                      "/pod_nanny",
                                      "--config-dir=/etc/config",
                                      "--cpu=44m",
                                      "--extra-cpu=0.5m",
                                      "--memory=51Mi",
                                      "--extra-memory=4Mi",
                                      "--poll-period=180000",
                                      "--threshold=5",
                                      "--deployment=metrics-server",
                                      "--container=metrics-server"
                                  ],
                                  "env": [
                                      {
                                          "name": "MY_POD_NAME",
                                          "valueFrom": {
                                              "fieldRef": {
                                                  "apiVersion": "v1",
                                                  "fieldPath": "metadata.name"
                                              }
                                          }
                                      },
                                      {
                                          "name": "MY_POD_NAMESPACE",
                                          "valueFrom": {
                                              "fieldRef": {
                                                  "apiVersion": "v1",
                                                  "fieldPath": "metadata.namespace"
                                              }
                                          }
                                      }
                                  ],
                                  "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.14",
                                  "imagePullPolicy": "IfNotPresent",
                                  "name": "metrics-server-vpa",
                                  "resources": {
                                      "limits": {
                                          "cpu": "100m",
                                          "memory": "300Mi"
                                      },
                                      "requests": {
                                          "cpu": "5m",
                                          "memory": "30Mi"
                                      }
                                  },
                                  "terminationMessagePath": "/dev/termination-log",
                                  "terminationMessagePolicy": "File",
                                  "volumeMounts": [
                                      {
                                          "mountPath": "/etc/config",
                                          "name": "metrics-server-config-volume"
                                      }
                                  ]
                              },
                              {
                                  "command": [
                                      "/metrics-server",
                                      "--kubelet-insecure-tls",
                                      "--kubelet-preferred-address-types=InternalIP",
                                      "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                                      "--cert-dir=/tmp",
                                      "--secure-port=4443"
                                  ],
                                  "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.1",
                                  "imagePullPolicy": "IfNotPresent",
                                  "livenessProbe": {
                                      "failureThreshold": 3,
                                      "httpGet": {
                                          "path": "/livez",
                                          "port": "ms-https",
                                          "scheme": "HTTPS"
                                      },
                                      "initialDelaySeconds": 20,
                                      "periodSeconds": 10,
                                      "successThreshold": 1,
                                      "timeoutSeconds": 10
                                  },
                                  "name": "metrics-server",
                                  "ports": [
                                      {
                                          "containerPort": 4443,
                                          "name": "ms-https",
                                          "protocol": "TCP"
                                      }
                                  ],
                                  "readinessProbe": {
                                      "failureThreshold": 3,
                                      "httpGet": {
                                          "path": "/readyz",
                                          "port": "ms-https",
                                          "scheme": "HTTPS"
                                      },
                                      "initialDelaySeconds": 60,
                                      "periodSeconds": 10,
                                      "successThreshold": 1,
                                      "timeoutSeconds": 10
                                  },
                                  "resources": {
                                      "limits": {
                                          "cpu": "46m",
                                          "memory": "63Mi"
                                      },
                                      "requests": {
                                          "cpu": "46m",
                                          "memory": "63Mi"
                                      }
                                  },
                                  "terminationMessagePath": "/dev/termination-log",
                                  "terminationMessagePolicy": "File",
                                  "volumeMounts": [
                                      {
                                          "mountPath": "/tmp",
                                          "name": "tmp-dir"
                                      }
                                  ]
                              }
                          ],
                          "dnsPolicy": "ClusterFirst",
                          "priorityClassName": "system-node-critical",
                          "restartPolicy": "Always",
                          "schedulerName": "default-scheduler",
                          "securityContext": {},
                          "serviceAccount": "metrics-server",
                          "serviceAccountName": "metrics-server",
                          "terminationGracePeriodSeconds": 30,
                          "tolerations": [
                              {
                                  "key": "CriticalAddonsOnly",
                                  "operator": "Exists"
                              },
                              {
                                  "effect": "NoExecute",
                                  "key": "node.kubernetes.io/unreachable",
                                  "operator": "Exists",
                                  "tolerationSeconds": 30
                              },
                              {
                                  "effect": "NoExecute",
                                  "key": "node.kubernetes.io/not-ready",
                                  "operator": "Exists",
                                  "tolerationSeconds": 30
                              }
                          ],
                          "volumes": [
                              {
                                  "emptyDir": {},
                                  "name": "tmp-dir"
                              },
                              {
                                  "configMap": {
                                      "defaultMode": 420,
                                      "name": "metrics-server-config",
                                      "optional": true
                                  },
                                  "name": "metrics-server-config-volume"
                              }
                          ]
                      }
                  }
              },
              "status": {
                  "availableReplicas": 2,
                  "conditions": [
                      {
                          "lastTransitionTime": "2023-04-14T19:33:26Z",
                          "lastUpdateTime": "2023-04-14T19:33:26Z",
                          "message": "Deployment has minimum availability.",
                          "reason": "MinimumReplicasAvailable",
                          "status": "True",
                          "type": "Available"
                      },
                      {
                          "lastTransitionTime": "2023-04-14T19:31:04Z",
                          "lastUpdateTime": "2023-04-14T19:33:33Z",
                          "message": "ReplicaSet \"metrics-server-5f8d84558d\" has successfully progressed.",
                          "reason": "NewReplicaSetAvailable",
                          "status": "True",
                          "type": "Progressing"
                      }
                  ],
                  "observedGeneration": 2,
                  "readyReplicas": 2,
                  "replicas": 2,
                  "updatedReplicas": 2
              }
          }
      ],
      "kind": "List",
      "metadata": {
          "resourceVersion": ""
      }
  }
- ''
