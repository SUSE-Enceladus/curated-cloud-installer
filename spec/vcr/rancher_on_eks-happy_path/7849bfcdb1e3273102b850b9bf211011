{"name":"cert-manager","info":{"first_deployed":"2023-02-17T12:44:45.914053711-08:00","last_deployed":"2023-02-17T12:44:45.914053711-08:00","deleted":"","description":"Install complete","status":"deployed","notes":"cert-manager v1.7.1 has been deployed successfully!\n\nIn order to begin issuing certificates, you will need to set up a ClusterIssuer\nor Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).\n\nMore information on the different types of issuers and how to configure them\ncan be found in our documentation:\n\nhttps://cert-manager.io/docs/configuration/\n\nFor information on how to configure cert-manager to automatically provision\nCertificates for Ingress resources, take a look at the `ingress-shim`\ndocumentation:\n\nhttps://cert-manager.io/docs/usage/ingress/\n"},"manifest":"---\n# Source: cert-manager/templates/cainjector-serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nautomountServiceAccountToken: true\nmetadata:\n  name: cert-manager-cainjector\n  namespace: \"cert-manager\"\n  labels:\n    app: cainjector\n    app.kubernetes.io/name: cainjector\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cainjector\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n---\n# Source: cert-manager/templates/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nautomountServiceAccountToken: true\nmetadata:\n  name: cert-manager\n  namespace: \"cert-manager\"\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n---\n# Source: cert-manager/templates/webhook-serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nautomountServiceAccountToken: true\nmetadata:\n  name: cert-manager-webhook\n  namespace: \"cert-manager\"\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n---\n# Source: cert-manager/templates/webhook-config.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cert-manager-webhook\n  namespace: \"cert-manager\"\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\ndata:\n---\n# Source: cert-manager/templates/cainjector-rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-cainjector\n  labels:\n    app: cainjector\n    app.kubernetes.io/name: cainjector\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cainjector\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"get\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"admissionregistration.k8s.io\"]\n    resources: [\"validatingwebhookconfigurations\", \"mutatingwebhookconfigurations\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"apiregistration.k8s.io\"]\n    resources: [\"apiservices\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"apiextensions.k8s.io\"]\n    resources: [\"customresourcedefinitions\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"auditregistration.k8s.io\"]\n    resources: [\"auditsinks\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n---\n# Source: cert-manager/templates/rbac.yaml\n# Issuer controller role\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-controller-issuers\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"issuers\", \"issuers/status\"]\n    verbs: [\"update\"]\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"issuers\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"update\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"create\", \"patch\"]\n---\n# Source: cert-manager/templates/rbac.yaml\n# ClusterIssuer controller role\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-controller-clusterissuers\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"clusterissuers\", \"clusterissuers/status\"]\n    verbs: [\"update\"]\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"clusterissuers\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"update\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"create\", \"patch\"]\n---\n# Source: cert-manager/templates/rbac.yaml\n# Certificates controller role\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-controller-certificates\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates\", \"certificates/status\", \"certificaterequests\", \"certificaterequests/status\"]\n    verbs: [\"update\"]\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates\", \"certificaterequests\", \"clusterissuers\", \"issuers\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  # We require these rules to support users with the OwnerReferencesPermissionEnforcement\n  # admission controller enabled:\n  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates/finalizers\", \"certificaterequests/finalizers\"]\n    verbs: [\"update\"]\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"orders\"]\n    verbs: [\"create\", \"delete\", \"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"update\", \"delete\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"create\", \"patch\"]\n---\n# Source: cert-manager/templates/rbac.yaml\n# Orders controller role\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-controller-orders\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"orders\", \"orders/status\"]\n    verbs: [\"update\"]\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"orders\", \"challenges\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"clusterissuers\", \"issuers\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"challenges\"]\n    verbs: [\"create\", \"delete\"]\n  # We require these rules to support users with the OwnerReferencesPermissionEnforcement\n  # admission controller enabled:\n  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"orders/finalizers\"]\n    verbs: [\"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"create\", \"patch\"]\n---\n# Source: cert-manager/templates/rbac.yaml\n# Challenges controller role\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-controller-challenges\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  # Use to update challenge resource status\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"challenges\", \"challenges/status\"]\n    verbs: [\"update\"]\n  # Used to watch challenge resources\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"challenges\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  # Used to watch challenges, issuer and clusterissuer resources\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"issuers\", \"clusterissuers\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  # Need to be able to retrieve ACME account private key to complete challenges\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  # Used to create events\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"create\", \"patch\"]\n  # HTTP01 rules\n  - apiGroups: [\"\"]\n    resources: [\"pods\", \"services\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"networking.k8s.io\"]\n    resources: [\"ingresses\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\", \"update\"]\n  - apiGroups: [ \"networking.x-k8s.io\" ]\n    resources: [ \"httproutes\" ]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\", \"update\"]\n  # We require the ability to specify a custom hostname when we are creating\n  # new ingress resources.\n  # See: https://github.com/openshift/origin/blob/21f191775636f9acadb44fa42beeb4f75b255532/pkg/route/apiserver/admission/ingress_admission.go#L84-L148\n  - apiGroups: [\"route.openshift.io\"]\n    resources: [\"routes/custom-host\"]\n    verbs: [\"create\"]\n  # We require these rules to support users with the OwnerReferencesPermissionEnforcement\n  # admission controller enabled:\n  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"challenges/finalizers\"]\n    verbs: [\"update\"]\n  # DNS01 rules (duplicated above)\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n---\n# Source: cert-manager/templates/rbac.yaml\n# ingress-shim controller role\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-controller-ingress-shim\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates\", \"certificaterequests\"]\n    verbs: [\"create\", \"update\", \"delete\"]\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates\", \"certificaterequests\", \"issuers\", \"clusterissuers\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"networking.k8s.io\"]\n    resources: [\"ingresses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  # We require these rules to support users with the OwnerReferencesPermissionEnforcement\n  # admission controller enabled:\n  # https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement\n  - apiGroups: [\"networking.k8s.io\"]\n    resources: [\"ingresses/finalizers\"]\n    verbs: [\"update\"]\n  - apiGroups: [\"networking.x-k8s.io\"]\n    resources: [\"gateways\", \"httproutes\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"networking.x-k8s.io\"]\n    resources: [\"gateways/finalizers\", \"httproutes/finalizers\"]\n    verbs: [\"update\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"create\", \"patch\"]\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-view\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n    rbac.authorization.k8s.io/aggregate-to-view: \"true\"\n    rbac.authorization.k8s.io/aggregate-to-edit: \"true\"\n    rbac.authorization.k8s.io/aggregate-to-admin: \"true\"\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates\", \"certificaterequests\", \"issuers\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"challenges\", \"orders\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-edit\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n    rbac.authorization.k8s.io/aggregate-to-edit: \"true\"\n    rbac.authorization.k8s.io/aggregate-to-admin: \"true\"\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates\", \"certificaterequests\", \"issuers\"]\n    verbs: [\"create\", \"delete\", \"deletecollection\", \"patch\", \"update\"]\n  - apiGroups: [\"acme.cert-manager.io\"]\n    resources: [\"challenges\", \"orders\"]\n    verbs: [\"create\", \"delete\", \"deletecollection\", \"patch\", \"update\"]\n---\n# Source: cert-manager/templates/rbac.yaml\n# Permission to approve CertificateRequests referencing cert-manager.io Issuers and ClusterIssuers\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-controller-approve:cert-manager-io\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cert-manager\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"signers\"]\n    verbs: [\"approve\"]\n    resourceNames: [\"issuers.cert-manager.io/*\", \"clusterissuers.cert-manager.io/*\"]\n---\n# Source: cert-manager/templates/rbac.yaml\n# Permission to:\n# - Update and sign CertificatSigningeRequests referencing cert-manager.io Issuers and ClusterIssuers\n# - Perform SubjectAccessReviews to test whether users are able to reference Namespaced Issuers\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-controller-certificatesigningrequests\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cert-manager\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  - apiGroups: [\"certificates.k8s.io\"]\n    resources: [\"certificatesigningrequests\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"certificates.k8s.io\"]\n    resources: [\"certificatesigningrequests/status\"]\n    verbs: [\"update\"]\n  - apiGroups: [\"certificates.k8s.io\"]\n    resources: [\"signers\"]\n    resourceNames: [\"issuers.cert-manager.io/*\", \"clusterissuers.cert-manager.io/*\"]\n    verbs: [\"sign\"]\n  - apiGroups: [\"authorization.k8s.io\"]\n    resources: [\"subjectaccessreviews\"]\n    verbs: [\"create\"]\n---\n# Source: cert-manager/templates/webhook-rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cert-manager-webhook:subjectaccessreviews\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n- apiGroups: [\"authorization.k8s.io\"]\n  resources: [\"subjectaccessreviews\"]\n  verbs: [\"create\"]\n---\n# Source: cert-manager/templates/cainjector-rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-cainjector\n  labels:\n    app: cainjector\n    app.kubernetes.io/name: cainjector\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cainjector\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-cainjector\nsubjects:\n  - name: cert-manager-cainjector\n    namespace: \"cert-manager\"\n    kind: ServiceAccount\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-controller-issuers\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-controller-issuers\nsubjects:\n  - name: cert-manager\n    namespace: \"cert-manager\"\n    kind: ServiceAccount\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-controller-clusterissuers\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-controller-clusterissuers\nsubjects:\n  - name: cert-manager\n    namespace: \"cert-manager\"\n    kind: ServiceAccount\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-controller-certificates\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-controller-certificates\nsubjects:\n  - name: cert-manager\n    namespace: \"cert-manager\"\n    kind: ServiceAccount\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-controller-orders\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-controller-orders\nsubjects:\n  - name: cert-manager\n    namespace: \"cert-manager\"\n    kind: ServiceAccount\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-controller-challenges\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-controller-challenges\nsubjects:\n  - name: cert-manager\n    namespace: \"cert-manager\"\n    kind: ServiceAccount\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-controller-ingress-shim\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-controller-ingress-shim\nsubjects:\n  - name: cert-manager\n    namespace: \"cert-manager\"\n    kind: ServiceAccount\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-controller-approve:cert-manager-io\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cert-manager\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-controller-approve:cert-manager-io\nsubjects:\n  - name: cert-manager\n    namespace: \"cert-manager\"\n    kind: ServiceAccount\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-controller-certificatesigningrequests\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cert-manager\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-controller-certificatesigningrequests\nsubjects:\n  - name: cert-manager\n    namespace: \"cert-manager\"\n    kind: ServiceAccount\n---\n# Source: cert-manager/templates/webhook-rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cert-manager-webhook:subjectaccessreviews\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cert-manager-webhook:subjectaccessreviews\nsubjects:\n- apiGroup: \"\"\n  kind: ServiceAccount\n  name: cert-manager-webhook\n  namespace: cert-manager\n---\n# Source: cert-manager/templates/cainjector-rbac.yaml\n# leader election rules\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: cert-manager-cainjector:leaderelection\n  namespace: kube-system\n  labels:\n    app: cainjector\n    app.kubernetes.io/name: cainjector\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cainjector\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  # Used for leader election by the controller\n  # cert-manager-cainjector-leader-election is used by the CertificateBased injector controller\n  #   see cmd/cainjector/start.go#L113\n  # cert-manager-cainjector-leader-election-core is used by the SecretBased injector controller\n  #   see cmd/cainjector/start.go#L137\n  # See also: https://github.com/kubernetes-sigs/controller-runtime/pull/1144#discussion_r480173688\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    resourceNames: [\"cert-manager-cainjector-leader-election\", \"cert-manager-cainjector-leader-election-core\"]\n    verbs: [\"get\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"create\"]\n  - apiGroups: [\"coordination.k8s.io\"]\n    resources: [\"leases\"]\n    resourceNames: [\"cert-manager-cainjector-leader-election\", \"cert-manager-cainjector-leader-election-core\"]\n    verbs: [\"get\", \"update\", \"patch\"]\n  - apiGroups: [\"coordination.k8s.io\"]\n    resources: [\"leases\"]\n    verbs: [\"create\"]\n---\n# Source: cert-manager/templates/rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: cert-manager:leaderelection\n  namespace: kube-system\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n  # Used for leader election by the controller\n  # See also: https://github.com/kubernetes-sigs/controller-runtime/pull/1144#discussion_r480173688\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    resourceNames: [\"cert-manager-controller\"]\n    verbs: [\"get\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"configmaps\"]\n    verbs: [\"create\"]\n  - apiGroups: [\"coordination.k8s.io\"]\n    resources: [\"leases\"]\n    resourceNames: [\"cert-manager-controller\"]\n    verbs: [\"get\", \"update\", \"patch\"]\n  - apiGroups: [\"coordination.k8s.io\"]\n    resources: [\"leases\"]\n    verbs: [\"create\"]\n---\n# Source: cert-manager/templates/webhook-rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: cert-manager-webhook:dynamic-serving\n  namespace: \"cert-manager\"\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nrules:\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  resourceNames:\n  - 'cert-manager-webhook-ca'\n  verbs: [\"get\", \"list\", \"watch\", \"update\"]\n# It's not possible to grant CREATE permission on a single resourceName.\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"create\"]\n---\n# Source: cert-manager/templates/cainjector-rbac.yaml\n# grant cert-manager permission to manage the leaderelection configmap in the\n# leader election namespace\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: cert-manager-cainjector:leaderelection\n  namespace: kube-system\n  labels:\n    app: cainjector\n    app.kubernetes.io/name: cainjector\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cainjector\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: cert-manager-cainjector:leaderelection\nsubjects:\n  - kind: ServiceAccount\n    name: cert-manager-cainjector\n    namespace: cert-manager\n---\n# Source: cert-manager/templates/rbac.yaml\n# grant cert-manager permission to manage the leaderelection configmap in the\n# leader election namespace\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: cert-manager:leaderelection\n  namespace: kube-system\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: cert-manager:leaderelection\nsubjects:\n  - apiGroup: \"\"\n    kind: ServiceAccount\n    name: cert-manager\n    namespace: cert-manager\n---\n# Source: cert-manager/templates/webhook-rbac.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: cert-manager-webhook:dynamic-serving\n  namespace: \"cert-manager\"\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: cert-manager-webhook:dynamic-serving\nsubjects:\n- apiGroup: \"\"\n  kind: ServiceAccount\n  name: cert-manager-webhook\n  namespace: cert-manager\n---\n# Source: cert-manager/templates/service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: cert-manager\n  namespace: \"cert-manager\"\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nspec:\n  type: ClusterIP\n  ports:\n  - protocol: TCP\n    port: 9402\n    name: tcp-prometheus-servicemonitor\n    targetPort: 9402\n  selector:\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n---\n# Source: cert-manager/templates/webhook-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: cert-manager-webhook\n  namespace: \"cert-manager\"\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nspec:\n  type: ClusterIP\n  ports:\n  - name: https\n    port: 443\n    protocol: TCP\n    targetPort: \"https\"\n  selector:\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n---\n# Source: cert-manager/templates/cainjector-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cert-manager-cainjector\n  namespace: \"cert-manager\"\n  labels:\n    app: cainjector\n    app.kubernetes.io/name: cainjector\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"cainjector\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: cainjector\n      app.kubernetes.io/instance: cert-manager\n      app.kubernetes.io/component: \"cainjector\"\n  template:\n    metadata:\n      labels:\n        app: cainjector\n        app.kubernetes.io/name: cainjector\n        app.kubernetes.io/instance: cert-manager\n        app.kubernetes.io/component: \"cainjector\"\n        app.kubernetes.io/version: \"v1.7.1\"\n        app.kubernetes.io/managed-by: Helm\n        helm.sh/chart: cert-manager-v1.7.1\n    spec:\n      serviceAccountName: cert-manager-cainjector\n      securityContext:\n        runAsNonRoot: true\n      containers:\n        - name: cert-manager\n          image: \"quay.io/jetstack/cert-manager-cainjector:v1.7.1\"\n          imagePullPolicy: IfNotPresent\n          args:\n          - --v=2\n          - --leader-election-namespace=kube-system\n          env:\n          - name: POD_NAMESPACE\n            valueFrom:\n              fieldRef:\n                fieldPath: metadata.namespace\n---\n# Source: cert-manager/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cert-manager\n  namespace: \"cert-manager\"\n  labels:\n    app: cert-manager\n    app.kubernetes.io/name: cert-manager\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"controller\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: cert-manager\n      app.kubernetes.io/instance: cert-manager\n      app.kubernetes.io/component: \"controller\"\n  template:\n    metadata:\n      labels:\n        app: cert-manager\n        app.kubernetes.io/name: cert-manager\n        app.kubernetes.io/instance: cert-manager\n        app.kubernetes.io/component: \"controller\"\n        app.kubernetes.io/version: \"v1.7.1\"\n        app.kubernetes.io/managed-by: Helm\n        helm.sh/chart: cert-manager-v1.7.1\n      annotations:\n        prometheus.io/path: \"/metrics\"\n        prometheus.io/scrape: 'true'\n        prometheus.io/port: '9402'\n    spec:\n      serviceAccountName: cert-manager\n      securityContext:\n        \n        runAsNonRoot: true\n      containers:\n        - name: cert-manager\n          image: \"quay.io/jetstack/cert-manager-controller:v1.7.1\"\n          imagePullPolicy: IfNotPresent\n          args:\n          - --v=2\n          - --cluster-resource-namespace=$(POD_NAMESPACE)\n          - --leader-election-namespace=kube-system\n          ports:\n          - containerPort: 9402\n            protocol: TCP\n          env:\n          - name: POD_NAMESPACE\n            valueFrom:\n              fieldRef:\n                fieldPath: metadata.namespace\n---\n# Source: cert-manager/templates/webhook-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cert-manager-webhook\n  namespace: \"cert-manager\"\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: webhook\n      app.kubernetes.io/instance: cert-manager\n      app.kubernetes.io/component: \"webhook\"\n  template:\n    metadata:\n      labels:\n        app: webhook\n        app.kubernetes.io/name: webhook\n        app.kubernetes.io/instance: cert-manager\n        app.kubernetes.io/component: \"webhook\"\n        app.kubernetes.io/version: \"v1.7.1\"\n        app.kubernetes.io/managed-by: Helm\n        helm.sh/chart: cert-manager-v1.7.1\n    spec:\n      serviceAccountName: cert-manager-webhook\n      securityContext:\n        runAsNonRoot: true\n      containers:\n        - name: cert-manager\n          image: \"quay.io/jetstack/cert-manager-webhook:v1.7.1\"\n          imagePullPolicy: IfNotPresent\n          args:\n          - --v=2\n          - --secure-port=10250\n          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)\n          - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca\n          - --dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc\n          ports:\n          - name: https\n            protocol: TCP\n            containerPort: 10250\n          livenessProbe:\n            httpGet:\n              path: /livez\n              port: 6080\n              scheme: HTTP\n            initialDelaySeconds: 60\n            periodSeconds: 10\n            timeoutSeconds: 1\n            successThreshold: 1\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /healthz\n              port: 6080\n              scheme: HTTP\n            initialDelaySeconds: 5\n            periodSeconds: 5\n            timeoutSeconds: 1\n            successThreshold: 1\n            failureThreshold: 3\n          env:\n          - name: POD_NAMESPACE\n            valueFrom:\n              fieldRef:\n                fieldPath: metadata.namespace\n---\n# Source: cert-manager/templates/webhook-mutating-webhook.yaml\napiVersion: admissionregistration.k8s.io/v1\nkind: MutatingWebhookConfiguration\nmetadata:\n  name: cert-manager-webhook\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n  annotations:\n    cert-manager.io/inject-ca-from-secret: \"cert-manager/cert-manager-webhook-ca\"\nwebhooks:\n  - name: webhook.cert-manager.io\n    rules:\n      - apiGroups:\n          - \"cert-manager.io\"\n          - \"acme.cert-manager.io\"\n        apiVersions:\n          - \"v1\"\n        operations:\n          - CREATE\n          - UPDATE\n        resources:\n          - \"*/*\"\n    admissionReviewVersions: [\"v1\"]\n    # This webhook only accepts v1 cert-manager resources.\n    # Equivalent matchPolicy ensures that non-v1 resource requests are sent to\n    # this webhook (after the resources have been converted to v1).\n    matchPolicy: Equivalent\n    timeoutSeconds: 10\n    failurePolicy: Fail\n    # Only include 'sideEffects' field in Kubernetes 1.12+\n    sideEffects: None\n    clientConfig:\n      service:\n        name: cert-manager-webhook\n        namespace: \"cert-manager\"\n        path: /mutate\n---\n# Source: cert-manager/templates/webhook-validating-webhook.yaml\napiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: cert-manager-webhook\n  labels:\n    app: webhook\n    app.kubernetes.io/name: webhook\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"webhook\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n  annotations:\n    cert-manager.io/inject-ca-from-secret: \"cert-manager/cert-manager-webhook-ca\"\nwebhooks:\n  - name: webhook.cert-manager.io\n    namespaceSelector:\n      matchExpressions:\n      - key: \"cert-manager.io/disable-validation\"\n        operator: \"NotIn\"\n        values:\n        - \"true\"\n      - key: \"name\"\n        operator: \"NotIn\"\n        values:\n        - cert-manager\n    rules:\n      - apiGroups:\n          - \"cert-manager.io\"\n          - \"acme.cert-manager.io\"\n        apiVersions:\n          - \"v1\"\n        operations:\n          - CREATE\n          - UPDATE\n        resources:\n          - \"*/*\"\n    admissionReviewVersions: [\"v1\"]\n    # This webhook only accepts v1 cert-manager resources.\n    # Equivalent matchPolicy ensures that non-v1 resource requests are sent to\n    # this webhook (after the resources have been converted to v1).\n    matchPolicy: Equivalent\n    timeoutSeconds: 10\n    failurePolicy: Fail\n    sideEffects: None\n    clientConfig:\n      service:\n        name: cert-manager-webhook\n        namespace: \"cert-manager\"\n        path: /validate\n","hooks":[{"name":"cert-manager-startupapicheck","kind":"ServiceAccount","path":"cert-manager/templates/startupapicheck-serviceaccount.yaml","manifest":"apiVersion: v1\nkind: ServiceAccount\nautomountServiceAccountToken: true\nmetadata:\n  name: cert-manager-startupapicheck\n  namespace: \"cert-manager\"\n  annotations:\n    helm.sh/hook: post-install\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n    helm.sh/hook-weight: \"-5\"\n  labels:\n    app: startupapicheck\n    app.kubernetes.io/name: startupapicheck\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"startupapicheck\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1","events":["post-install"],"last_run":{"started_at":"2023-02-17T12:44:49.092870236-08:00","completed_at":"2023-02-17T12:44:49.322999701-08:00","phase":"Succeeded"},"weight":-5,"delete_policies":["before-hook-creation","hook-succeeded"]},{"name":"cert-manager-startupapicheck:create-cert","kind":"Role","path":"cert-manager/templates/startupapicheck-rbac.yaml","manifest":"# create certificate role\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: cert-manager-startupapicheck:create-cert\n  namespace: \"cert-manager\"\n  labels:\n    app: startupapicheck\n    app.kubernetes.io/name: startupapicheck\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"startupapicheck\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n  annotations:\n    helm.sh/hook: post-install\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n    helm.sh/hook-weight: \"-5\"\nrules:\n  - apiGroups: [\"cert-manager.io\"]\n    resources: [\"certificates\"]\n    verbs: [\"create\"]","events":["post-install"],"last_run":{"started_at":"2023-02-17T12:44:49.365453549-08:00","completed_at":"2023-02-17T12:44:49.632106611-08:00","phase":"Succeeded"},"weight":-5,"delete_policies":["before-hook-creation","hook-succeeded"]},{"name":"cert-manager-startupapicheck:create-cert","kind":"RoleBinding","path":"cert-manager/templates/startupapicheck-rbac.yaml","manifest":"apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: cert-manager-startupapicheck:create-cert\n  namespace: \"cert-manager\"\n  labels:\n    app: startupapicheck\n    app.kubernetes.io/name: startupapicheck\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"startupapicheck\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n  annotations:\n    helm.sh/hook: post-install\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n    helm.sh/hook-weight: \"-5\"\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: cert-manager-startupapicheck:create-cert\nsubjects:\n  - kind: ServiceAccount\n    name: cert-manager-startupapicheck\n    namespace: cert-manager","events":["post-install"],"last_run":{"started_at":"2023-02-17T12:44:49.684058158-08:00","completed_at":"2023-02-17T12:44:49.91129556-08:00","phase":"Succeeded"},"weight":-5,"delete_policies":["before-hook-creation","hook-succeeded"]},{"name":"cert-manager-startupapicheck","kind":"Job","path":"cert-manager/templates/startupapicheck-job.yaml","manifest":"apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: cert-manager-startupapicheck\n  namespace: \"cert-manager\"\n  labels:\n    app: startupapicheck\n    app.kubernetes.io/name: startupapicheck\n    app.kubernetes.io/instance: cert-manager\n    app.kubernetes.io/component: \"startupapicheck\"\n    app.kubernetes.io/version: \"v1.7.1\"\n    app.kubernetes.io/managed-by: Helm\n    helm.sh/chart: cert-manager-v1.7.1\n  annotations:\n    helm.sh/hook: post-install\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n    helm.sh/hook-weight: \"1\"\nspec:\n  backoffLimit: 4\n  template:\n    metadata:\n      labels:\n        app: startupapicheck\n        app.kubernetes.io/name: startupapicheck\n        app.kubernetes.io/instance: cert-manager\n        app.kubernetes.io/component: \"startupapicheck\"\n        app.kubernetes.io/version: \"v1.7.1\"\n        app.kubernetes.io/managed-by: Helm\n        helm.sh/chart: cert-manager-v1.7.1\n    spec:\n      restartPolicy: OnFailure\n      serviceAccountName: cert-manager-startupapicheck\n      securityContext:\n        runAsNonRoot: true\n      containers:\n        - name: cert-manager\n          image: \"quay.io/jetstack/cert-manager-ctl:v1.7.1\"\n          imagePullPolicy: IfNotPresent\n          args:\n          - check\n          - api\n          - --wait=1m","events":["post-install"],"last_run":{"started_at":"2023-02-17T12:44:49.964968324-08:00","completed_at":"2023-02-17T12:45:03.598920746-08:00","phase":"Succeeded"},"weight":1,"delete_policies":["before-hook-creation","hook-succeeded"]}],"version":1,"namespace":"cert-manager"}
